from src.Project.Grammar import *

regex_table = [
    (for_, "for"),
    (let, "let"),
    (if_, "if"),
    (else_, "else"),
    (elif_, "elif"),
    (while_, "while"),
    (function, "function"),
    (print_, "print"),
    (pi, "pi"),
    (e, "e"),
    (new, "new"),
    (inherits, "inherits"),
    (protocol, "protocol"),
    (type_, "type"),
    (in_, "in"),
    (range_, "range"),
    (true, "true"),
    (false, "false"),
    (extends, "extends"),
    (sin, "sin"),
    (cos, "cos"),
    (tan, "tan"),
    (sqrt, "sqrt"),
    (exp, "exp"),
    (log, "log"),
    (rand, "rand"),
    (base, "base"),
    (plus, "\+"),
    (times, "\*"),
    (minus, "-"),
    (divide, "/"),
    (equal, "="),
    (dequal, "=="),
    (notequal, "\!="),
    (lesst, "<"),
    (greatt, ">"),
    (lequal, "<="),
    (gequal, ">="),
    (lparen, "\("),
    (rparen, "\)"),
    (lbrack, "\["),
    (rbrack, "\]"),
    (lbrace, "{"),
    (rbrace, "}"),
    (comma, ","),
    (period, "\."),
    (colon, ":"),
    (semicolon, ";"),
    (arrow, "->"),
    (darrow, "=>"),
    (and_, "&"),
    (or_, "\|"),
    (list_comprehension, "\|\|"),
    (not_, "\!"),
    (modulus, "%"),
    (power, "^"),
    (destruct, ":="),
    (concat, "@"),
    (is_, "is"),
    (as_, "as"),
    (identifier, "([a..z]|[A..Z]|_)([a..z]|[A..Z]|_|[0..9])*"),
    (number, "([0..9]+\.)?[0..9]+"),
    (string, "\"((\\\\\")|(\\A))*\"")
]
